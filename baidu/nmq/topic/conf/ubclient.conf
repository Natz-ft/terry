#和galileo的配置相关，放在这里
[topic]
#检查是否只有自己注册到galileo的topic_commit上，避免多个主同时注册到galileo
check_galileo_topic_commit : true
#galileo的topic_commit的service_name，和ubclient里的一致
galileo_topic_commit_service_name : topic-commit-spbase
#galileo的topic_commit的service_name，和ubclient里的一致
galileo_topic_di_service_name : topic-di-spbase

#master给UbClientManager的配置，用于注册galileo，如果ConfType配置为0，才去注册，配置为1不注册
[MasterUbClientConfig] 
#配置类型 
#0:优先使用资源定位 
#1:优先使用本地配置 
ConfType  :  1
[.Reactor] 
ThreadNum  :  4 
CheckTime : 1 

[.Galileo] 
#伽利略资源服务器地址 
GALILEO_HOST  :  xxxx:2181
#伽利略数据包大小，注意该数据包并不是单个数据pack大小，而是一次返回时最大可能 
#数据长度，单位byte，默认大小为128K 
GALILEO_DATA_PACK_SIZE  :  131072 
#存放Zookeeper客户端日志文件名 
GALILEO_ZOO_LOG : ./log/zookeeper.log 
#资源定位配置本地的备份位置 
DIR : ./conf 
FILE : galileo-back.conf 
#获取资源，是假的，只为骗过galileo
[..REQUEST_RESOURCE] 
[...@RES_ARR] 
NAME  :  topic-di-spbase
ADDR  :  /baidu/ns/ksarch/nmq/common/topic-di-spbase
#注册资源
[..REGISTER_RESOURCE]
[...@RES_ARR]
ADDR  :  /baidu/ns/ksarch/nmq/common/topic-commit-spbase
DATA  :  {"name" : "topic-commit-spbase"}
[...@RES_ARR]
ADDR  :  /baidu/ns/ksarch/nmq/common/topic-di-spbase
DATA  :  {"name" : "topic-di-spbase"}

#master用于检查的UbClientManager的配置，ConfType必须配置为0
[MasterCheckUbClientConfig] 
#配置类型 
#0:优先使用资源定位 
#1:优先使用本地配置 
ConfType  :  0
[.Reactor] 
ThreadNum  :  4 
CheckTime : 1 

[.Galileo] 
#伽利略资源服务器地址 
GALILEO_HOST  :  xxxx:2181
#伽利略数据包大小，注意该数据包并不是单个数据pack大小，而是一次返回时最大可能 
#数据长度，单位byte，默认大小为128K 
GALILEO_DATA_PACK_SIZE  :  131072 
#存放Zookeeper客户端日志文件名 
GALILEO_ZOO_LOG : ./log/zookeeper.log 
#资源定位配置本地的备份位置 
DIR : ./conf 
FILE : galileo-back.conf 
#依赖资源配置项，注意资源名必须全局唯一，注意机房配置 
#master用来检测是否有多个机器注册到了topic_commit
[..REQUEST_RESOURCE] 
[...@RES_ARR] 
NAME  :  topic-commit-spbase
ADDR  :  /baidu/ns/ksarch/nmq/common/topic-commit-spbase

#slave的UbClientManager配置
[SlaveUbClientConfig] 
#配置类型 
#0:优先使用资源定位 
#1:优先使用本地配置 
ConfType  :  1
[.Reactor] 
ThreadNum  :  4 
CheckTime : 1 

[.UbClient] 
[..@Service] 
Name  :  topic_di
ConnectAll :  0
DefaultConnectTimeOut  :  1000 
DefaultReadTimeOut  :  1000 
DefaultWriteTimeOut  :  1000 
DefaultMaxConnect  :  3
DefaultRetry  :  5 
#LONG / SHORT 
#主从同步，使用pipeline模式，必须用短连接
DefaultConnectType  :  SHORT 
DefaultLinger  :  0 
#声明将要使用的策略类及属性 
[...CurrStrategy] 
ClassName  :  UbClientStrategy
[...CurrHealthy] 
ClassName  :  UbClientHealthyChecker  
[...@Server] 
IP : 127.0.0.1
Port : 9911

[.Galileo] 
#伽利略资源服务器地址 
GALILEO_HOST  :  xxxx:2181
#伽利略数据包大小，注意该数据包并不是单个数据pack大小，而是一次返回时最大可能 
#数据长度，单位byte，默认大小为128K 
GALILEO_DATA_PACK_SIZE  :  131072 
#存放Zookeeper客户端日志文件名 
GALILEO_ZOO_LOG : ./log/zookeeper.log 
#资源定位配置本地的备份位置 
DIR : ./conf 
FILE : galileo-back.conf 
#依赖资源配置项，注意资源名必须全局唯一，注意机房配置 
[..REQUEST_RESOURCE] 
[...@RES_ARR] 
NAME  :  topic-di-spbase
ADDR  :  /baidu/ns/ksarch/nmq/common/topic-di-spbase

[..REGISTER_RESOURCE]
#如果slave也提供di server，则需要注册，否则把下面几行注释掉
#[...@RES_ARR]
#ADDR  : /baidu/ns/ksarch/nmq/common/topic-slave-di-spbase
#DATA  : {"name" : "topic-slave-di-spbase"}
